---


          
        - name: "centos7==installation"
          assert:
           success_msg: "proceed to installation "
           fail_msg: "this vm is not an centos 7 docker-distribution is not availible on centos8"
           that:
            ({{ansible_distribution_major_version}} == 7 )
        - name: " ==docker distribution"
          yum:
           name: [ epel-release, firewalld, docker-distribution]
           state: present

        - name: " ==python librairies"
          yum:
           name: [ python2-passlib, httpd-tools, python-cryptography,py-bcrypt]
           state: present
           
        - name: Check that the somefile.conf exists
          stat:
           path: "{{path_cert}}"
          register: stat_result

        - name: "create privatekey"
          openssl_privatekey:
           path: "{{path_prvkey}}"
           size: 4096
          when: not stat_result.stat.exists

        - name: "create " 
          openssl_csr:
           path: "{{path_csr}}" 
           privatekey_path: "{{path_prvkey}}"
           country_name: BE
           organization_name: "{{name_org}}"
           common_name: "{{common_name_registry}}" 
          when: not stat_result.stat.exists

        - name: " create selfsigned CA "
          openssl_certificate:
           provider: selfsigned
           privatekey_path: "{{path_prvkey}}"
           path: "{{path_cert}}"
           csr_path: "{{path_csr}}"
          when: not stat_result.stat.exists
       
        - name: " create auth"
          htpasswd:
           path: "{{path_auth}}"
           create: yes
           state: present
           name: "{{user_auth}}"
           password: "{{passwd}}"
           crypt_scheme: bcrypt

        - name: "modi conf"
          template:
            src: config.yml.j2
            dest: /etc/docker-distribution/registry/config.yml


        - name: "set firewall"
          firewalld:
           port: 5000/tcp
           permanent: true
           state: enabled
           
        - name : "reload firewalld"
          service:
            name: firewalld
            state: reloaded        

        - name: start docker
          service:
           name: docker-distribution 
           state: started

        - name: "copy certificate"
          fetch:
           src: "{{path_cert}}"
           dest: roles/registry-host/files/
           flat: yes
